# Borrowed from https://github.com/sfackler/rust-postgres/blob/04bd98e7edb238511661b311c725a176012bca6a/.circleci/config.yml
# Used under MIT license.

version: 2
jobs:
  build:
    docker:
    - environment:
        POSTGRES_URL: postgres://circleci@localhost:5432/circleci-rustbucks
        RUSTFLAGS: -D warnings
      image: circleci/rust:1-browsers
    - environment:
        POSTGRES_DB: circleci-rustbucks
        POSTGRES_USER: circleci
      image: postgres:11.2-alpine
    steps:
    - checkout
    - restore_cache:
        name: "Restore registry index"
        key: registry
    - run: cargo generate-lockfile
    - save_cache:
        name: "Save registry index"
        key: registry-{{ .BuildNum }}
        paths:
        - /usr/local/cargo/registry/index
    - run: rustc --version | tee ~/rust-version
    - restore_cache:
        name: "Restore registry cache"
        keys:
        - registry-cache-{{ checksum "Cargo.lock" }}
    - restore_cache:
        name: "Restore target"
        keys:
        - target-{{ checksum "~/rust-version" }}-{{ checksum "Cargo.lock" }}
    - run: cargo clean -p rustbucks
    - run: cargo build --all --tests --locked
    - run: ./bin/gc-target
    - save_cache:
        name: "Save registry cache"
        key: registry-cache-{{ checksum "Cargo.lock" }}-{{ .BuildNum }}
        paths:
        - /usr/local/cargo/registry/cache
    - save_cache:
        name: "Save target"
        key: target-{{ checksum "~/rust-version" }}-{{ checksum "Cargo.lock" }}
        paths:
        - target
    - run:
        name: Waiting for Postgres to be ready
        command: ./bin/await-postgres
    - run: env RUST_BACKTRACE=1 cargo test -p rustbucks --locked